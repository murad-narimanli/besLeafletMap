{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar reactLeaflet = require('react-leaflet');\n\nrequire('leaflet.fullscreen');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nvar FullscreenControl = /*#__PURE__*/function (_MapControl) {\n  _inherits(FullscreenControl, _MapControl);\n\n  function FullscreenControl() {\n    _classCallCheck(this, FullscreenControl);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FullscreenControl).apply(this, arguments));\n  }\n\n  _createClass(FullscreenControl, [{\n    key: \"createLeafletElement\",\n    value: function createLeafletElement(props) {\n      return L.control.fullscreen(props);\n    }\n  }]);\n\n  return FullscreenControl;\n}(reactLeaflet.MapControl);\n\nFullscreenControl.propTypes = {\n  position: PropTypes.string,\n  title: PropTypes.string,\n  titleCancel: PropTypes.string,\n  content: PropTypes.node,\n  forceSeparateButton: PropTypes.bool,\n  forcePseudoFullscreen: PropTypes.bool,\n  fullscreenElement: PropTypes.bool\n};\nvar index = reactLeaflet.withLeaflet(FullscreenControl);\nmodule.exports = index;","map":null,"metadata":{},"sourceType":"script"}