{"ast":null,"code":"import _regeneratorRuntime from \"/Users/muradnerimanli/Desktop/react-leaflet-draw-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/muradnerimanli/Desktop/react-leaflet-draw-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/muradnerimanli/Desktop/react-leaflet-draw-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muradnerimanli/Desktop/react-leaflet-draw-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/muradnerimanli/Desktop/react-leaflet-draw-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/muradnerimanli/Desktop/react-leaflet-draw-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muradnerimanli/Desktop/react-leaflet-draw-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/muradnerimanli/Desktop/react-leaflet-draw-example/src/test.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Map, TileLayer, Circle, FeatureGroup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport FullscreenControl from \"react-leaflet-fullscreen\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/marker-icon.png\",\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/marker-icon.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/marker-shadow.png\"\n}); //\n\nvar polyline;\n\nvar test = /*#__PURE__*/function (_Component) {\n  _inherits(test, _Component);\n\n  var _super = _createSuper(test);\n\n  function test() {\n    var _this;\n\n    _classCallCheck(this, test);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._onEdited = function (e) {\n      var numEdited = 0;\n      e.layers.eachLayer(function (layer) {\n        numEdited += 1;\n      });\n      console.log(\"_onEdited: edited \".concat(numEdited, \" layers\"), e);\n\n      _this._onChange();\n    };\n\n    _this._onCreated = function (e) {\n      var type = e.layerType;\n      var layer = e.layer;\n\n      if (type === \"marker\") {\n        // Do marker specific actions\n        console.log(\"_onCreated: marker created\", e);\n      } else {\n        console.log(\"_onCreated: something else created:\", type, e);\n      } // Do whatever else you need to. (save to db; etc)\n\n\n      _this._onChange();\n    };\n\n    _this._onDeleted = function (e) {\n      var numDeleted = 0;\n      e.layers.eachLayer(function (layer) {\n        numDeleted += 1;\n      });\n      console.log(\"onDeleted: removed \".concat(numDeleted, \" layers\"), e);\n\n      _this._onChange();\n    };\n\n    _this._onMounted = function (drawControl) {\n      console.log(\"_onMounted\", drawControl);\n    };\n\n    _this._onEditStart = function (e) {\n      console.log(\"_onEditStart\", e);\n    };\n\n    _this._onEditStop = function (e) {\n      console.log(\"_onEditStop\", e);\n    };\n\n    _this._onDeleteStart = function (e) {\n      console.log(\"_onDeleteStart\", e);\n    };\n\n    _this._onDeleteStop = function (e) {\n      console.log(\"_onDeleteStop\", e);\n    };\n\n    _this._editableFG = null;\n\n    _this._onFeatureGroupReady = function (reactFGref) {\n      var leafletGeoJSON = undefined; // populate the leaflet FeatureGroup with the geoJson layers\n\n      getGeoJson().then(function (s) {\n        console.log(s);\n        leafletGeoJSON = new L.GeoJSON(s);\n      });\n      var leafletFG = reactFGref.leafletElement;\n      console.log(getGeoJson());\n      setTimeout(function () {\n        leafletGeoJSON.eachLayer(function (layer) {\n          leafletFG.addLayer(layer);\n        });\n      }, 1000); // store the ref for future access to content\n      // this._editableFG = reactFGref;\n    };\n\n    _this._onChange = function (e) {\n      console.log(e); // this._editableFG contains the edited geometry, which can be manipulated through the leaflet API\n\n      var onChange = _this.props.onChange;\n\n      if (!_this._editableFG || !onChange) {\n        return;\n      }\n\n      var geojsonData = _this._editableFG.leafletElement.toGeoJSON();\n\n      onChange(geojsonData);\n    };\n\n    return _this;\n  }\n\n  _createClass(test, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Map, {\n        center: [37.8189, -122.4786],\n        zoom: 13,\n        zoomControl: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(FullscreenControl, {\n        position: \"topleft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(TileLayer, {\n        attribution: \"Tiles \\xA9 Carto\" // url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\"\n        ,\n        url: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(FeatureGroup, {\n        ref: function ref(reactFGref) {\n          _this2._onFeatureGroupReady(reactFGref);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EditControl, {\n        position: \"topright\",\n        onEdited: this._onEdited,\n        onCreated: this._onCreated,\n        onDeleted: this._onDeleted,\n        onMounted: this._onMounted,\n        onEditStart: this._onEditStart,\n        onEditStop: this._onEditStop,\n        onDeleteStart: this._onDeleteStart,\n        onDeleteStop: this._onDeleteStop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return test;\n}(Component); // data taken from the example in https://github.com/PaulLeCam/react-leaflet/issues/176\n\n\nexport { test as default };\n\nvar getGeoJson = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://gist.githubusercontent.com/MaxAndolini/07846b5071dfac25c61db8fa5f45267a/raw/d0496d7ea29a12be586fe2355e78cbfb73787404/arazi.json\").then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return {\n                features: data.features,\n                type: \"FeatureCollection\"\n              };\n            }).catch(function (error) {\n              return console.log(error);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getGeoJson() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/muradnerimanli/Desktop/react-leaflet-draw-example/src/test.jsx"],"names":["React","Component","Map","TileLayer","Circle","FeatureGroup","L","EditControl","FullscreenControl","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","polyline","test","_onEdited","e","numEdited","layers","eachLayer","layer","console","log","_onChange","_onCreated","type","layerType","_onDeleted","numDeleted","_onMounted","drawControl","_onEditStart","_onEditStop","_onDeleteStart","_onDeleteStop","_editableFG","_onFeatureGroupReady","reactFGref","leafletGeoJSON","undefined","getGeoJson","then","s","GeoJSON","leafletFG","leafletElement","setTimeout","addLayer","onChange","props","geojsonData","toGeoJSON","fetch","response","json","data","features","catch","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Map, TileLayer, Circle, FeatureGroup } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport FullscreenControl from \"react-leaflet-fullscreen\";\r\n\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl:\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/marker-icon.png\",\r\n  iconUrl:\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/marker-icon.png\",\r\n  shadowUrl:\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0/images/marker-shadow.png\"\r\n});\r\n\r\n//\r\n\r\nlet polyline;\r\n\r\nexport default class test extends Component {\r\n\r\n  _onEdited = e => {\r\n    let numEdited = 0;\r\n    e.layers.eachLayer(layer => {\r\n      numEdited += 1;\r\n    });\r\n    console.log(`_onEdited: edited ${numEdited} layers`, e);\r\n\r\n    this._onChange();\r\n  };\r\n\r\n  _onCreated = e => {\r\n    let type = e.layerType;\r\n    let layer = e.layer;\r\n    if (type === \"marker\") {\r\n      // Do marker specific actions\r\n      console.log(\"_onCreated: marker created\", e);\r\n    } else {\r\n      console.log(\"_onCreated: something else created:\", type, e);\r\n    }\r\n    // Do whatever else you need to. (save to db; etc)\r\n\r\n    this._onChange();\r\n  };\r\n\r\n  _onDeleted = e => {\r\n    let numDeleted = 0;\r\n    e.layers.eachLayer(layer => {\r\n      numDeleted += 1;\r\n    });\r\n    console.log(`onDeleted: removed ${numDeleted} layers`, e);\r\n\r\n    this._onChange();\r\n  };\r\n\r\n  _onMounted = drawControl => {\r\n    console.log(\"_onMounted\", drawControl);\r\n  };\r\n\r\n  _onEditStart = e => {\r\n    console.log(\"_onEditStart\", e);\r\n  };\r\n\r\n  _onEditStop = e => {\r\n    console.log(\"_onEditStop\", e);\r\n  };\r\n\r\n  _onDeleteStart = e => {\r\n    console.log(\"_onDeleteStart\", e);\r\n  };\r\n\r\n  _onDeleteStop = e => {\r\n    console.log(\"_onDeleteStop\", e);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Map center={[37.8189, -122.4786]} zoom={13} zoomControl={false}>\r\n        <FullscreenControl position=\"topleft\" />\r\n         <TileLayer\r\n              attribution=\"Tiles &copy; Carto\"\r\n              // url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\"\r\n          />\r\n          <FeatureGroup\r\n            ref={reactFGref => {\r\n              this._onFeatureGroupReady(reactFGref);\r\n            }}\r\n          >\r\n            <EditControl\r\n              position=\"topright\"\r\n              onEdited={this._onEdited}\r\n              onCreated={this._onCreated}\r\n              onDeleted={this._onDeleted}\r\n              onMounted={this._onMounted}\r\n              onEditStart={this._onEditStart}\r\n              onEditStop={this._onEditStop}\r\n              onDeleteStart={this._onDeleteStart}\r\n              onDeleteStop={this._onDeleteStop}\r\n            />\r\n          </FeatureGroup>\r\n      </Map>\r\n    );\r\n  }\r\n\r\n  _editableFG = null;\r\n\r\n  _onFeatureGroupReady = reactFGref => {\r\n    let leafletGeoJSON = undefined\r\n    // populate the leaflet FeatureGroup with the geoJson layers\r\n    getGeoJson().then((s)=>{\r\n      console.log(s)\r\n      leafletGeoJSON = new L.GeoJSON(s);\r\n    })\r\n    let leafletFG = reactFGref.leafletElement;\r\n    console.log(getGeoJson())\r\n\r\n    setTimeout(()=>{\r\n      leafletGeoJSON.eachLayer(layer => {\r\n        leafletFG.addLayer(layer);\r\n      });\r\n    } , 1000)\r\n\r\n    // store the ref for future access to content\r\n\r\n    // this._editableFG = reactFGref;\r\n  };\r\n\r\n  _onChange = (e) => {\r\n    console.log(e)\r\n    // this._editableFG contains the edited geometry, which can be manipulated through the leaflet API\r\n    const { onChange } = this.props;\r\n\r\n    if (!this._editableFG || !onChange) {\r\n      return;\r\n    }\r\n    const geojsonData = this._editableFG.leafletElement.toGeoJSON();\r\n    onChange(geojsonData);\r\n  };\r\n}\r\n\r\n// data taken from the example in https://github.com/PaulLeCam/react-leaflet/issues/176\r\n\r\nconst  getGeoJson = async () => {\r\n  await fetch(\r\n      \"https://gist.githubusercontent.com/MaxAndolini/07846b5071dfac25c61db8fa5f45267a/raw/d0496d7ea29a12be586fe2355e78cbfb73787404/arazi.json\"\r\n  )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n         return {\r\n            features: data.features,\r\n              type:\"FeatureCollection\"\r\n          }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}