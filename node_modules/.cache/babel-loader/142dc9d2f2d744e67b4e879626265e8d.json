{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/muradnerimanli/Desktop/react-leaflet-draw-example/src/components/DrawTools.jsx\";\n\nimport React, { useState } from \"react\";\nimport L from \"leaflet\";\nimport { Map, TileLayer, Marker, Popup, FeatureGroup, Circle } from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\n\nvar DrawTools = function DrawTools() {\n  var _onEdited = function _onEdited(e) {\n    var numEdited = 0;\n    e.layers.eachLayer(function (layer) {\n      numEdited += 1;\n    });\n    console.log(\"_onEdited: edited \".concat(numEdited, \" layers\"), e); // this._onChange();\n  };\n\n  var _onCreated = function _onCreated(e) {\n    var type = e.layerType;\n    var layer = e.layer;\n\n    if (type === \"marker\") {\n      // Do marker specific actions\n      console.log(\"_onCreated: marker created\", e);\n    } else {\n      console.log(\"_onCreated: something else created:\", type, e);\n    }\n\n    console.log(\"Geojson\", layer.toGeoJSON());\n    console.log(\"coords\", layer.getLatLngs()); // Do whatever else you need to. (save to db; etc)\n    // this._onChange();\n  };\n\n  var _onDeleted = function _onDeleted(e) {\n    var numDeleted = 0;\n    e.layers.eachLayer(function (layer) {\n      numDeleted += 1;\n    });\n    console.log(\"onDeleted: removed \".concat(numDeleted, \" layers\"), e); // this._onChange();\n  };\n\n  var _onMounted = function _onMounted(drawControl) {\n    console.log(\"_onMounted\", drawControl);\n  };\n\n  var _onEditStart = function _onEditStart(e) {\n    console.log(\"_onEditStart\", e);\n  };\n\n  var _onEditStop = function _onEditStop(e) {\n    console.log(\"_onEditStop\", e);\n  };\n\n  var _onDeleteStart = function _onDeleteStart(e) {\n    console.log(\"_onDeleteStart\", e);\n  };\n\n  var _onDeleteStop = function _onDeleteStop(e) {\n    console.log(\"_onDeleteStop\", e);\n  };\n\n  var _onDrawStart = function _onDrawStart(e) {\n    console.log(\"_onDrawStart\", e);\n  };\n\n  return /*#__PURE__*/React.createElement(FeatureGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(EditControl, {\n    onDrawStart: _onDrawStart,\n    position: \"topright\",\n    onEdited: _onEdited,\n    onCreated: _onCreated,\n    onDeleted: _onDeleted,\n    draw: {\n      polyline: {\n        icon: new L.DivIcon({\n          iconSize: new L.Point(8, 8),\n          className: \"leaflet-div-icon leaflet-editing-icon\"\n        }),\n        shapeOptions: {\n          guidelineDistance: 10,\n          color: \"navy\",\n          weight: 3\n        }\n      },\n      rectangle: false,\n      circlemarker: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default DrawTools;","map":{"version":3,"sources":["/Users/muradnerimanli/Desktop/react-leaflet-draw-example/src/components/DrawTools.jsx"],"names":["React","useState","L","Map","TileLayer","Marker","Popup","FeatureGroup","Circle","EditControl","DrawTools","_onEdited","e","numEdited","layers","eachLayer","layer","console","log","_onCreated","type","layerType","toGeoJSON","getLatLngs","_onDeleted","numDeleted","_onMounted","drawControl","_onEditStart","_onEditStop","_onDeleteStart","_onDeleteStop","_onDrawStart","polyline","icon","DivIcon","iconSize","Point","className","shapeOptions","guidelineDistance","color","weight","rectangle","circlemarker"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport L from \"leaflet\";\r\nimport {\r\n\tMap,\r\n\tTileLayer,\r\n\tMarker,\r\n\tPopup,\r\n\tFeatureGroup,\r\n\tCircle\r\n} from \"react-leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\n\r\nconst DrawTools = () => {\r\n\tconst _onEdited = e => {\r\n\t\tlet numEdited = 0;\r\n\t\te.layers.eachLayer(layer => {\r\n\t\t\tnumEdited += 1;\r\n\t\t});\r\n\t\tconsole.log(`_onEdited: edited ${numEdited} layers`, e);\r\n\r\n\t\t// this._onChange();\r\n\t};\r\n\r\n\tconst _onCreated = e => {\r\n\t\tlet type = e.layerType;\r\n\t\tlet layer = e.layer;\r\n\t\tif (type === \"marker\") {\r\n\t\t\t// Do marker specific actions\r\n\t\t\tconsole.log(\"_onCreated: marker created\", e);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"_onCreated: something else created:\", type, e);\r\n\t\t}\r\n\r\n\t\tconsole.log(\"Geojson\", layer.toGeoJSON());\r\n\t\tconsole.log(\"coords\", layer.getLatLngs());\r\n\t\t// Do whatever else you need to. (save to db; etc)\r\n\r\n\t\t// this._onChange();\r\n\t};\r\n\r\n\tconst _onDeleted = e => {\r\n\t\tlet numDeleted = 0;\r\n\t\te.layers.eachLayer(layer => {\r\n\t\t\tnumDeleted += 1;\r\n\t\t});\r\n\t\tconsole.log(`onDeleted: removed ${numDeleted} layers`, e);\r\n\r\n\t\t// this._onChange();\r\n\t};\r\n\r\n\tconst _onMounted = drawControl => {\r\n\t\tconsole.log(\"_onMounted\", drawControl);\r\n\t};\r\n\r\n\tconst _onEditStart = e => {\r\n\t\tconsole.log(\"_onEditStart\", e);\r\n\t};\r\n\r\n\tconst _onEditStop = e => {\r\n\t\tconsole.log(\"_onEditStop\", e);\r\n\t};\r\n\r\n\tconst _onDeleteStart = e => {\r\n\t\tconsole.log(\"_onDeleteStart\", e);\r\n\t};\r\n\r\n\tconst _onDeleteStop = e => {\r\n\t\tconsole.log(\"_onDeleteStop\", e);\r\n\t};\r\n\r\n\tconst _onDrawStart = e => {\r\n\t\tconsole.log(\"_onDrawStart\", e);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<FeatureGroup>\r\n\t\t\t<EditControl\r\n\t\t\t\tonDrawStart={_onDrawStart}\r\n\t\t\t\tposition=\"topright\"\r\n\t\t\t\tonEdited={_onEdited}\r\n\t\t\t\tonCreated={_onCreated}\r\n\t\t\t\tonDeleted={_onDeleted}\r\n\t\t\t\tdraw={{\r\n\t\t\t\t\tpolyline: {\r\n\t\t\t\t\t\ticon: new L.DivIcon({\r\n\t\t\t\t\t\t\ticonSize: new L.Point(8, 8),\r\n\t\t\t\t\t\t\tclassName: \"leaflet-div-icon leaflet-editing-icon\"\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tshapeOptions: {\r\n\t\t\t\t\t\t\tguidelineDistance: 10,\r\n\t\t\t\t\t\t\tcolor: \"navy\",\r\n\t\t\t\t\t\t\tweight: 3\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\trectangle: false,\r\n\t\t\t\t\tcirclemarker: false,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</FeatureGroup>\r\n\t);\r\n};\r\n\r\nexport default DrawTools;\r\n"]},"metadata":{},"sourceType":"module"}